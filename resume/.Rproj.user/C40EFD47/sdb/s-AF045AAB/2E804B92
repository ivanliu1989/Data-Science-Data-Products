{
    "contents" : "library(shiny)\nlibrary(quantmod)\nsource(\"helpers.R\")\nlibrary(ggplot2)\nrequire(rCharts)\nlibrary(xlsx)\nshinyServer(function(input,output){\n    ## Summary\n    output$myChart1 <- renderChart({\n        names(iris) = gsub(\"\\\\.\", \"\", names(iris))\n        p1 <- rPlot(input$x, input$y, data = iris, color = \"Species\", \n                    facet = \"Species\", type = 'point')\n        p1$set(xScale='ordinal',yScale='linear',width=600)\n        p1$addParams(dom = 'myChart1')\n        return(p1)\n    })\n    output$myChart2 <- renderChart({\n        map3 <- Leaflet$new()\n        map3$set(xScale='ordinal',yScale='linear',width=600)\n        map3$setView(c(51.505, -0.09), zoom = 13)\n        map3$marker(c(51.5, -0.09), bindPopup = \"<p> Hi. I am a popup </p>\")\n        map3$marker(c(51.495, -0.083), bindPopup = \"<p> Hi. I am another popup </p>\")\n        map3$addParams(dom = 'myChart2')\n        return(map3)\n    })\n    ## Detailed Report\n    output$mytable1 <- renderDataTable({\n        diamonds[, input$show_vars_tb1, drop = FALSE]\n    }, options = list(bSortClasses = TRUE, aLengthMenu = c(5, 15, 30), iDisplayLength = 5))\n    output$mytable2 <- renderDataTable({\n        mtcars[, input$show_vars_tb2, drop = FALSE]\n    }, options = list(bSortClasses = TRUE, aLengthMenu = c(5, 15, 30), iDisplayLength = 5))\n    \n    ## Market Information\n    dataInput <- reactive({  \n        getSymbols(input$symb, src = \"yahoo\", \n                   from = input$dates[1],\n                   to = input$dates[2],\n                   auto.assign = FALSE)\n    })\n    finalInput <- reactive({\n        if (!input$adjust) return(dataInput())\n        adjust(dataInput())\n    })\n    output$plot <- renderPlot({\n        chartSeries(finalInput(), theme = chartTheme(\"white\"), \n                    type = \"line\", log.scale = input$log, TA = NULL)\n    })\n    \n\n    \n    ## Download Datasets\n    datasetInput <- reactive({\n        switch(input$dataset,\n               \"Dongdamen\" = mtcars,\n               \"GJ\" = rock)\n    })\n    \n    output$table_download <- renderTable({\n        datasetInput()\n    })\n    \n    output$downloadData <- downloadHandler(\n        filename = function() { paste(input$dataset, '.csv', sep='') },\n        content = function(file) {\n            write.csv(datasetInput(), file)\n        }\n    )\n    \n    \n}\n)",
    "created" : 1409886374928.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1387738388",
    "id" : "2E804B92",
    "lastKnownWriteTime" : 1409887686,
    "path" : "C:/Users/Ivan.Liuyanfeng/Desktop/Data_Mining_Work_Space/Data-Science-Data-Products/resume/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}